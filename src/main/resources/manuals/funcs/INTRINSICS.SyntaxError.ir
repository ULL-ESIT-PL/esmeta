def <BUILTIN>:INTRINSICS.SyntaxError(
  this: ESValue,
  ArgumentsList: List[ESValue],
  NewTarget: Constructor | Undefined,
): Unknown {
  if (< 0 ArgumentsList.length) let message = (pop < ArgumentsList) else let message = absent
  if (< 0 ArgumentsList.length) let options = (pop < ArgumentsList) else let options = absent
  if (= NewTarget undefined) {
    let newTarget = @EXECUTION_STACK[0].Function
  } else {
    let newTarget = NewTarget
  }
  call %0 = clo<OrdinaryCreateFromConstructor>(newTarget, "%SyntaxError.prototype%", (new ["ErrorData"]))
  let O = [? %0]
  %1 = (! (= message undefined))
  if %1 {
    call %2 = clo<ToString>(message)
    let msg = [? %2]
    call %3 = clo<CreateNonEnumerableDataPropertyOrThrow>(O, "message", msg)
    [! %3]
  } else {}
  call %4 = clo<InstallErrorCause>(O, options)
  [? %4]
  return O
}
